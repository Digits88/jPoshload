/** https://github.com/martinkr/jPoshLoad - v2.0.2 - Copyright (c) 2011-2014 Martin Krause - Dual licensed under the MIT and GPL licenses. */
(function(b){b.fn.jPoshLoad=function(m,k){jQuery("html").addClass("jPoshLoad_completed-false");var l=b.extend({},b.fn.jPoshLoad.oDefaults,k),e=jQuery(b.fn.jPoshLoad.createLoaderHTML(m,l)),g=jQuery(document).data("jPoshload")||{},j=k.images,f=j.length,i=k.forceNoCache||false,h;g[m]={oOptions:l,iTotal:0,$elWrapper:e};g[m].iTotal=f;g[m].iLoaded=0;jQuery(document).data("jPoshload",g);if(!f){c(m);return}for(h=0;h<f;h++){a(m,i,j[h])}};function a(e,f,h){console.log("additem",arguments);var g=document.createElement("img");jQuery(g).on("load.jPoshLoad",{sIdLoader:e},b.fn.jPoshLoad.onLoadItem);g.src=[h,(f?["?",++b.fn.jPoshLoad.UID].join(""):"")].join("");if(g.complete||g.readyState===4){b.fn.jPoshLoad.onLoadItem({target:g,data:{sIdLoader:e}})}}function d(e){var f;if(jQuery(document).data("jPoshload")&&jQuery(document).data("jPoshload")[e]){f=jQuery(document).data("jPoshload")[e]}return(f)?f.iTotal-f.iLoaded:undefined}function c(g){var h=jQuery(document).data("jPoshload")[g],f=h.$elWrapper,e=h.iTotal,i=h.iLoaded;b.fn.jPoshLoad.updateStatus({sIdLoader:g,iTotal:e,iLoaded:i,$elWrapper:f});if(i===e){b.fn.jPoshLoad.onComplete(g,f)}}b.fn.jPoshLoad.__version="2.0.3";b.fn.jPoshLoad.__class="$.fn.jPoshLoad";b.fn.jPoshLoad.UIDBase=new Date().getTime();b.fn.jPoshLoad.UID=b.fn.jPoshLoad.UIDBase;b.fn.jPoshLoad.sClassLoaded="jPoshLoad_loaded";b.fn.jPoshLoad.onLoadItem=function(g){var f=jQuery(g.target),h=jQuery(document).data("jPoshload"),e=g.data.sIdLoader;h[e].iLoaded=h[e].iLoaded+1;jQuery(document).data("jPoshload",h);f.off("load.jPoshLoad");f=null;c(e);return};b.fn.jPoshLoad.getStatus=function(e){return d(e)};b.fn.jPoshLoad.isComplete=function(e){var f=d(e);return(f===undefined)?undefined:!f};b.fn.jPoshLoad.oDefaults={forceNoCache:false,images:[]}})(jQuery);
/**
 * OVERRIDE THESE FUNCTIONS!
 */

/**
* Executed when all elements are completed
* ATTENTION! Override with your own function!
* @param  {String} sIdLoader_ the completed loader's id
* @param  {jQuery-Element} $elWrapper_ HTML-loader's wrapper element
* @return {Void}
*/
$.fn.jPoshLoad.onComplete = function (sIdLoader_,$elWrapper_) {
	jQuery('html').removeClass('jPoshLoad_completed-false');
	$elWrapper_.delay(1500).fadeOut();
};

/**
* Updates the status elements
* ATTENTION! Override with your own function!
* @param  {Object} oOptions_ the current loaders properties {sIdLoader, iTotal, iLoaded, $elWrapper}
* @return {Void}
*/
$.fn.jPoshLoad.updateStatus = function (oOptions_) {

	// animation and stuff
	oOptions_.$elWrapper.find('.bar')
		.stop(true,true)
		.animate( {'width' : [ Math.floor( (oOptions_.iLoaded / oOptions_.iTotal ) *100 ) ,'%'].join('')},1000);
		// console.log(oOptions_.iLoaded , ' / ', oOptions_.iTotal  ,  Math.floor( (oOptions_.iLoaded / oOptions_.iTotal ) *100 )  + "%")
};

/**
* Creates HTML elements for the preloader
* ATTENTION! Override with your own function!
* @param  {String} sIdLoader_ the current loader's id
* @param  {Object} oOptions_ the current loader's options
* @return {jQuery-Element} It is important to return the loader's html wrapper. This will be stored and passed to you later (updateStatus etc).
*/
$.fn.jPoshLoad.createLoaderHTML = function (sIdLoader_,oOptions_) {
	jQuery('body')
		.append('<div id="html-'+sIdLoader_+'" style="padding: 5px 0 ;  background: #1e1e1e; color:#ddd; position: relative; top:0; left:0; z-index: 1000; height: 40px; width: 100%;">&nbsp;'+sIdLoader_+' - '+oOptions_.headline+'<div class="bar" style="height: 10px; width: 0%; background: red;"></div></div>');

	return jQuery('#html-'+sIdLoader_);
};

